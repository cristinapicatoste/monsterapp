{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","e","target","value","App","useState","setMonsters","searchField","setSearchField","filteredMonsters","filter","toLowerCase","includes","fetch","then","res","json","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAIaA,EAAO,SAACC,GAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLjBC,G,MAAW,SAACR,GAAW,IAAD,EAC/B,OACI,qBAAKC,UAAU,YAAf,mBACKD,EAAMS,gBADX,aACK,EAAgBC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlDM,G,MAAY,SAACX,GACtB,OACI,uBACIC,UAAU,SACVW,KAAMZ,EAAMY,KACZC,YAAab,EAAMa,YACnBC,SAAU,SAAAC,GAAC,OAAIf,EAAMc,SAASC,EAAEC,OAAOC,Y,MCsBpCC,MAxBf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNV,EADM,KACIW,EADJ,OAEyBD,qBAFzB,mBAENE,EAFM,KAEOC,EAFP,KAGPC,EAAmBd,EAASe,QAAO,SAAApB,GAAO,OAAIA,EAAQE,KAAKmB,cAAcC,SAA3B,OAAoCL,QAApC,IAAoCA,OAApC,EAAoCA,EAAaI,kBAOrG,OALAE,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAxB,GAAO,OAAIgB,EAAYhB,MAC5B2B,MAAMC,QAAQC,KAGf,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,KAAM,SACNC,YAAa,iBACbC,SAAUQ,KAEVD,GAAeZ,GAAY,cAAC,EAAD,CAAUA,SAAUA,IAChDc,GAAoB,cAAC,EAAD,CAAUd,SAAUc,QCdhCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e1ce621d.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './Card.css';\n\nexport const Card = (props) => {\n\n    return (\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`} />\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Card } from '../Card/Card';\n\nimport './CardList.css';\n\nexport const CardList = (props) => {\n    return (\n        <div className=\"card-list\">\n            {props.monsters?.map(monster => <Card key={monster.id} monster={monster} />)}\n        </div>\n    )\n}\n","import React from 'react';\nimport './SearchBox.css';\n\nexport const SearchBox = (props) => {\n    return (\n        <input\n            className=\"search\"\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={e => props.onChange(e.target.value)}\n        />\n    )\n}\n","import React, { useState } from \"react\";\nimport { CardList } from \"./components/CardList/CardList\";\nimport { SearchBox } from \"./components/SearchBox/SearchBox\";\n\nimport './App.css';\n\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState();\n  const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField?.toLowerCase()))\n\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(monster => setMonsters(monster))\n    .catch(console.log)\n\n  return (\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n        type={\"search\"}\n        placeholder={\"Search monster\"}\n        onChange={setSearchField}\n      />\n      {!searchField && monsters && <CardList monsters={monsters} />}\n      {filteredMonsters && <CardList monsters={filteredMonsters} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}